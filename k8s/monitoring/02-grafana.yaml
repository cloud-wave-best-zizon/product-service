# Grafana ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: ecommerce
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
               "access":"proxy",
                "editable": true,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://prometheus-service:9090",
                "version": 1
            }
        ]
    }

---
# Grafana Dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: ecommerce
data:
  dashboards.yaml: |-
    {
        "apiVersion": 1,
        "providers": [
            {
                "folder": "General",
                "name": "0",
                "options": {
                    "path": "/grafana-dashboard-definitions/0"
                },
                "orgId": 1,
                "type": "file"
            }
        ]
    }

---
# Ecommerce Services Dashboard
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-ecommerce
  namespace: ecommerce
data:
  ecommerce-services.json: |-
    {
      "dashboard": {
        "id": null,
        "title": "Ecommerce Services Dashboard",
        "tags": [ "ecommerce" ],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Product Service - Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{job=\"product-service\"}[5m]))",
                "format": "time_series",
                "legendFormat": "Request Rate"
              }
            ],
            "xAxis": {
              "show": true
            },
            "yAxes": [
              {
                "label": "requests/sec",
                "show": true
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Order Service - Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{job=\"order-service\"}[5m]))",
                "format": "time_series",
                "legendFormat": "Request Rate"
              }
            ],
            "xAxis": {
              "show": true
            },
            "yAxes": [
              {
                "label": "requests/sec",
                "show": true
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 0
            }
          },
          {
            "id": 3,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"ecommerce\"}[5m])) by (pod)",
                "format": "time_series",
                "legendFormat": "{{pod}}"
              }
            ],
            "xAxis": {
              "show": true
            },
            "yAxes": [
              {
                "label": "CPU cores",
                "show": true
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            }
          },
          {
            "id": 4,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(container_memory_usage_bytes{namespace=\"ecommerce\"}) by (pod) / 1024 / 1024",
                "format": "time_series",
                "legendFormat": "{{pod}}"
              }
            ],
            "xAxis": {
              "show": true
            },
            "yAxes": [
              {
                "label": "MB",
                "show": true
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            }
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "timepicker": {},
        "templating": {
          "list": []
        },
        "annotations": {
          "list": []
        },
        "refresh": "10s",
        "schemaVersion": 16,
        "version": 0,
        "links": []
      }
    }

---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: ecommerce
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:10.0.0
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-providers
              readOnly: false
            - mountPath: /grafana-dashboard-definitions/0
              name: grafana-dashboard-ecommerce
              readOnly: false
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin123"  # 실제 환경에서는 Secret 사용
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
      volumes:
        - name: grafana-pv
          emptyDir: {}
        - name: grafana-datasources
          configMap:
              defaultMode: 420
              name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
              defaultMode: 420
              name: grafana-dashboard-providers
        - name: grafana-dashboard-ecommerce
          configMap:
              defaultMode: 420
              name: grafana-dashboard-ecommerce

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: ecommerce
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
  type: LoadBalancer